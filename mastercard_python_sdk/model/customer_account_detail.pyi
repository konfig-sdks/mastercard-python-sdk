# coding: utf-8

"""
    Open Banking

    OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.16.0
    Contact: apisupport@mastercard.com
    Created by: https://developer.mastercard.com/open-banking-us/documentation/support/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from mastercard_python_sdk import schemas  # noqa: F401


class CustomerAccountDetail(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Additional customer account details. Not all data points will return for each account type. You can see the account type that each data point will return for in descriptions. The data point are also subject to availability by the institution.
    """


    class MetaOapg:
        
        class properties:
            description = schemas.StrSchema
            dateAsOf = schemas.Int64Schema
            availableBalanceAmount = schemas.NumberSchema
            openDate = schemas.Int64Schema
            periodStartDate = schemas.Int64Schema
            periodEndDate = schemas.Int64Schema
            periodInterestRate = schemas.NumberSchema
            periodDepositAmount = schemas.NumberSchema
            periodInterestAmount = schemas.NumberSchema
            interestYtdAmount = schemas.NumberSchema
            interestPriorYtdAmount = schemas.NumberSchema
            maturityDate = schemas.Int64Schema
            interestRate = schemas.StrSchema
            creditAvailableAmount = schemas.NumberSchema
            creditMaxAmount = schemas.NumberSchema
            cashAdvanceAvailableAmount = schemas.NumberSchema
            cashAdvanceMaxAmount = schemas.NumberSchema
            cashAdvanceBalance = schemas.NumberSchema
            cashAdvanceInterestRate = schemas.NumberSchema
            currentBalance = schemas.NumberSchema
            paymentMinAmount = schemas.NumberSchema
            paymentDueDate = schemas.Int64Schema
            previousBalance = schemas.NumberSchema
            statementStartDate = schemas.Int64Schema
            statementEndDate = schemas.Int64Schema
            statementPurchaseAmount = schemas.NumberSchema
            statementFinanceAmount = schemas.NumberSchema
            statementCreditAmount = schemas.NumberSchema
            rewardEarnedBalance = schemas.Int32Schema
            pastDueAmount = schemas.NumberSchema
            lastPaymentAmount = schemas.NumberSchema
            lastPaymentDate = schemas.Int64Schema
            statementCloseBalance = schemas.NumberSchema
            termOfMl = schemas.StrSchema
            mlHolderName = schemas.StrSchema
            lateFeeAmount = schemas.NumberSchema
            payoffAmount = schemas.NumberSchema
            payoffAmountDate = schemas.Int64Schema
            originalMaturityDate = schemas.Int64Schema
            principalBalance = schemas.NumberSchema
            escrowBalance = schemas.NumberSchema
            interestPeriod = schemas.StrSchema
            initialMlAmount = schemas.NumberSchema
            initialMlDate = schemas.Int64Schema
            nextPaymentPrincipalAmount = schemas.NumberSchema
            nextPaymentInterestAmount = schemas.NumberSchema
            nextPayment = schemas.NumberSchema
            nextPaymentDate = schemas.Int64Schema
            lastPaymentDueDate = schemas.Int64Schema
            lastPaymentReceiveDate = schemas.Int64Schema
            lastPaymentPrincipalAmount = schemas.NumberSchema
            lastPaymentInterestAmount = schemas.NumberSchema
            lastPaymentEscrowAmount = schemas.NumberSchema
            lastPaymentLastFeeAmount = schemas.NumberSchema
            lastPaymentLateCharge = schemas.NumberSchema
            ytdPrincipalPaid = schemas.NumberSchema
            ytdInterestPaid = schemas.NumberSchema
            ytdInsurancePaid = schemas.NumberSchema
            ytdTaxPaid = schemas.NumberSchema
            autoPayEnrolled = schemas.BoolSchema
            marginAllowed = schemas.BoolSchema
            cashAccountAllowed = schemas.BoolSchema
            collateral = schemas.StrSchema
            currentSchool = schemas.StrSchema
            firstPaymentDate = schemas.Int64Schema
            firstMortgage = schemas.BoolSchema
            loanPaymentFreq = schemas.StrSchema
            originalSchool = schemas.StrSchema
            recurringPaymentAmount = schemas.NumberSchema
            lender = schemas.StrSchema
            endingBalanceAmount = schemas.NumberSchema
            loanTermType = schemas.StrSchema
            paymentsMade = schemas.Int32Schema
            balloonAmount = schemas.NumberSchema
            projectedInterest = schemas.NumberSchema
            interestPaidLtd = schemas.NumberSchema
            interestRateType = schemas.StrSchema
            loanPaymentType = schemas.StrSchema
            repaymentPlan = schemas.StrSchema
            paymentsRemaining = schemas.Int32Schema
            marginBalance = schemas.NumberSchema
            shortBalance = schemas.NumberSchema
            availableCashBalance = schemas.NumberSchema
            maturityValueAmount = schemas.NumberSchema
            vestedBalance = schemas.NumberSchema
            empMatchAmount = schemas.NumberSchema
            empPretaxContribAmount = schemas.NumberSchema
            empPretaxContribAmountYtd = schemas.NumberSchema
            contribTotalYtd = schemas.NumberSchema
            cashBalanceAmount = schemas.NumberSchema
            preTaxAmount = schemas.NumberSchema
            afterTaxAmount = schemas.NumberSchema
            matchAmount = schemas.NumberSchema
            profitSharingAmount = schemas.NumberSchema
            rolloverAmount = schemas.NumberSchema
            otherVestAmount = schemas.NumberSchema
            otherNonvestAmount = schemas.NumberSchema
            currentLoanBalance = schemas.NumberSchema
            loanRate = schemas.NumberSchema
            buyPower = schemas.NumberSchema
            rolloverLtd = schemas.NumberSchema
            loanAwardId = schemas.StrSchema
            originalInterestRate = schemas.NumberSchema
            guarantor = schemas.StrSchema
            owner = schemas.StrSchema
            interestSubsidyType = schemas.StrSchema
            interestBalance = schemas.NumberSchema
            remainingTermOfMl = schemas.NumberSchema
            initialInterestRate = schemas.NumberSchema
            feesBalance = schemas.NumberSchema
            loanYtdInterestPaid = schemas.NumberSchema
            loanYtdFeesPaid = schemas.NumberSchema
            loanYtdPrincipalPaid = schemas.NumberSchema
            loanStatus = schemas.StrSchema
            loanStatusStartDate = schemas.Int64Schema
            loanStatusEndDate = schemas.Int64Schema
            weightedInterestRate = schemas.NumberSchema
            repaymentPlanStartDate = schemas.Int64Schema
            repaymentPlanEndDate = schemas.Int64Schema
            expectedPayoffDate = schemas.Int64Schema
            outOfSchoolDate = schemas.Int64Schema
            convertToRepayment = schemas.Int64Schema
            daysDelinquent = schemas.Int32Schema
            totalPrincipalPaid = schemas.NumberSchema
            totalInterestPaid = schemas.NumberSchema
            totalAmountPaid = schemas.NumberSchema
            __annotations__ = {
                "description": description,
                "dateAsOf": dateAsOf,
                "availableBalanceAmount": availableBalanceAmount,
                "openDate": openDate,
                "periodStartDate": periodStartDate,
                "periodEndDate": periodEndDate,
                "periodInterestRate": periodInterestRate,
                "periodDepositAmount": periodDepositAmount,
                "periodInterestAmount": periodInterestAmount,
                "interestYtdAmount": interestYtdAmount,
                "interestPriorYtdAmount": interestPriorYtdAmount,
                "maturityDate": maturityDate,
                "interestRate": interestRate,
                "creditAvailableAmount": creditAvailableAmount,
                "creditMaxAmount": creditMaxAmount,
                "cashAdvanceAvailableAmount": cashAdvanceAvailableAmount,
                "cashAdvanceMaxAmount": cashAdvanceMaxAmount,
                "cashAdvanceBalance": cashAdvanceBalance,
                "cashAdvanceInterestRate": cashAdvanceInterestRate,
                "currentBalance": currentBalance,
                "paymentMinAmount": paymentMinAmount,
                "paymentDueDate": paymentDueDate,
                "previousBalance": previousBalance,
                "statementStartDate": statementStartDate,
                "statementEndDate": statementEndDate,
                "statementPurchaseAmount": statementPurchaseAmount,
                "statementFinanceAmount": statementFinanceAmount,
                "statementCreditAmount": statementCreditAmount,
                "rewardEarnedBalance": rewardEarnedBalance,
                "pastDueAmount": pastDueAmount,
                "lastPaymentAmount": lastPaymentAmount,
                "lastPaymentDate": lastPaymentDate,
                "statementCloseBalance": statementCloseBalance,
                "termOfMl": termOfMl,
                "mlHolderName": mlHolderName,
                "lateFeeAmount": lateFeeAmount,
                "payoffAmount": payoffAmount,
                "payoffAmountDate": payoffAmountDate,
                "originalMaturityDate": originalMaturityDate,
                "principalBalance": principalBalance,
                "escrowBalance": escrowBalance,
                "interestPeriod": interestPeriod,
                "initialMlAmount": initialMlAmount,
                "initialMlDate": initialMlDate,
                "nextPaymentPrincipalAmount": nextPaymentPrincipalAmount,
                "nextPaymentInterestAmount": nextPaymentInterestAmount,
                "nextPayment": nextPayment,
                "nextPaymentDate": nextPaymentDate,
                "lastPaymentDueDate": lastPaymentDueDate,
                "lastPaymentReceiveDate": lastPaymentReceiveDate,
                "lastPaymentPrincipalAmount": lastPaymentPrincipalAmount,
                "lastPaymentInterestAmount": lastPaymentInterestAmount,
                "lastPaymentEscrowAmount": lastPaymentEscrowAmount,
                "lastPaymentLastFeeAmount": lastPaymentLastFeeAmount,
                "lastPaymentLateCharge": lastPaymentLateCharge,
                "ytdPrincipalPaid": ytdPrincipalPaid,
                "ytdInterestPaid": ytdInterestPaid,
                "ytdInsurancePaid": ytdInsurancePaid,
                "ytdTaxPaid": ytdTaxPaid,
                "autoPayEnrolled": autoPayEnrolled,
                "marginAllowed": marginAllowed,
                "cashAccountAllowed": cashAccountAllowed,
                "collateral": collateral,
                "currentSchool": currentSchool,
                "firstPaymentDate": firstPaymentDate,
                "firstMortgage": firstMortgage,
                "loanPaymentFreq": loanPaymentFreq,
                "originalSchool": originalSchool,
                "recurringPaymentAmount": recurringPaymentAmount,
                "lender": lender,
                "endingBalanceAmount": endingBalanceAmount,
                "loanTermType": loanTermType,
                "paymentsMade": paymentsMade,
                "balloonAmount": balloonAmount,
                "projectedInterest": projectedInterest,
                "interestPaidLtd": interestPaidLtd,
                "interestRateType": interestRateType,
                "loanPaymentType": loanPaymentType,
                "repaymentPlan": repaymentPlan,
                "paymentsRemaining": paymentsRemaining,
                "marginBalance": marginBalance,
                "shortBalance": shortBalance,
                "availableCashBalance": availableCashBalance,
                "maturityValueAmount": maturityValueAmount,
                "vestedBalance": vestedBalance,
                "empMatchAmount": empMatchAmount,
                "empPretaxContribAmount": empPretaxContribAmount,
                "empPretaxContribAmountYtd": empPretaxContribAmountYtd,
                "contribTotalYtd": contribTotalYtd,
                "cashBalanceAmount": cashBalanceAmount,
                "preTaxAmount": preTaxAmount,
                "afterTaxAmount": afterTaxAmount,
                "matchAmount": matchAmount,
                "profitSharingAmount": profitSharingAmount,
                "rolloverAmount": rolloverAmount,
                "otherVestAmount": otherVestAmount,
                "otherNonvestAmount": otherNonvestAmount,
                "currentLoanBalance": currentLoanBalance,
                "loanRate": loanRate,
                "buyPower": buyPower,
                "rolloverLtd": rolloverLtd,
                "loanAwardId": loanAwardId,
                "originalInterestRate": originalInterestRate,
                "guarantor": guarantor,
                "owner": owner,
                "interestSubsidyType": interestSubsidyType,
                "interestBalance": interestBalance,
                "remainingTermOfMl": remainingTermOfMl,
                "initialInterestRate": initialInterestRate,
                "feesBalance": feesBalance,
                "loanYtdInterestPaid": loanYtdInterestPaid,
                "loanYtdFeesPaid": loanYtdFeesPaid,
                "loanYtdPrincipalPaid": loanYtdPrincipalPaid,
                "loanStatus": loanStatus,
                "loanStatusStartDate": loanStatusStartDate,
                "loanStatusEndDate": loanStatusEndDate,
                "weightedInterestRate": weightedInterestRate,
                "repaymentPlanStartDate": repaymentPlanStartDate,
                "repaymentPlanEndDate": repaymentPlanEndDate,
                "expectedPayoffDate": expectedPayoffDate,
                "outOfSchoolDate": outOfSchoolDate,
                "convertToRepayment": convertToRepayment,
                "daysDelinquent": daysDelinquent,
                "totalPrincipalPaid": totalPrincipalPaid,
                "totalInterestPaid": totalInterestPaid,
                "totalAmountPaid": totalAmountPaid,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateAsOf"]) -> MetaOapg.properties.dateAsOf: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["availableBalanceAmount"]) -> MetaOapg.properties.availableBalanceAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["openDate"]) -> MetaOapg.properties.openDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["periodStartDate"]) -> MetaOapg.properties.periodStartDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["periodEndDate"]) -> MetaOapg.properties.periodEndDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["periodInterestRate"]) -> MetaOapg.properties.periodInterestRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["periodDepositAmount"]) -> MetaOapg.properties.periodDepositAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["periodInterestAmount"]) -> MetaOapg.properties.periodInterestAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["interestYtdAmount"]) -> MetaOapg.properties.interestYtdAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["interestPriorYtdAmount"]) -> MetaOapg.properties.interestPriorYtdAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maturityDate"]) -> MetaOapg.properties.maturityDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["interestRate"]) -> MetaOapg.properties.interestRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creditAvailableAmount"]) -> MetaOapg.properties.creditAvailableAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creditMaxAmount"]) -> MetaOapg.properties.creditMaxAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cashAdvanceAvailableAmount"]) -> MetaOapg.properties.cashAdvanceAvailableAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cashAdvanceMaxAmount"]) -> MetaOapg.properties.cashAdvanceMaxAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cashAdvanceBalance"]) -> MetaOapg.properties.cashAdvanceBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cashAdvanceInterestRate"]) -> MetaOapg.properties.cashAdvanceInterestRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["currentBalance"]) -> MetaOapg.properties.currentBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paymentMinAmount"]) -> MetaOapg.properties.paymentMinAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paymentDueDate"]) -> MetaOapg.properties.paymentDueDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["previousBalance"]) -> MetaOapg.properties.previousBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statementStartDate"]) -> MetaOapg.properties.statementStartDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statementEndDate"]) -> MetaOapg.properties.statementEndDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statementPurchaseAmount"]) -> MetaOapg.properties.statementPurchaseAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statementFinanceAmount"]) -> MetaOapg.properties.statementFinanceAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statementCreditAmount"]) -> MetaOapg.properties.statementCreditAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rewardEarnedBalance"]) -> MetaOapg.properties.rewardEarnedBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pastDueAmount"]) -> MetaOapg.properties.pastDueAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPaymentAmount"]) -> MetaOapg.properties.lastPaymentAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPaymentDate"]) -> MetaOapg.properties.lastPaymentDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statementCloseBalance"]) -> MetaOapg.properties.statementCloseBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["termOfMl"]) -> MetaOapg.properties.termOfMl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mlHolderName"]) -> MetaOapg.properties.mlHolderName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lateFeeAmount"]) -> MetaOapg.properties.lateFeeAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payoffAmount"]) -> MetaOapg.properties.payoffAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payoffAmountDate"]) -> MetaOapg.properties.payoffAmountDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["originalMaturityDate"]) -> MetaOapg.properties.originalMaturityDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["principalBalance"]) -> MetaOapg.properties.principalBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["escrowBalance"]) -> MetaOapg.properties.escrowBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["interestPeriod"]) -> MetaOapg.properties.interestPeriod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["initialMlAmount"]) -> MetaOapg.properties.initialMlAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["initialMlDate"]) -> MetaOapg.properties.initialMlDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nextPaymentPrincipalAmount"]) -> MetaOapg.properties.nextPaymentPrincipalAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nextPaymentInterestAmount"]) -> MetaOapg.properties.nextPaymentInterestAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nextPayment"]) -> MetaOapg.properties.nextPayment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nextPaymentDate"]) -> MetaOapg.properties.nextPaymentDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPaymentDueDate"]) -> MetaOapg.properties.lastPaymentDueDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPaymentReceiveDate"]) -> MetaOapg.properties.lastPaymentReceiveDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPaymentPrincipalAmount"]) -> MetaOapg.properties.lastPaymentPrincipalAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPaymentInterestAmount"]) -> MetaOapg.properties.lastPaymentInterestAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPaymentEscrowAmount"]) -> MetaOapg.properties.lastPaymentEscrowAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPaymentLastFeeAmount"]) -> MetaOapg.properties.lastPaymentLastFeeAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPaymentLateCharge"]) -> MetaOapg.properties.lastPaymentLateCharge: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ytdPrincipalPaid"]) -> MetaOapg.properties.ytdPrincipalPaid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ytdInterestPaid"]) -> MetaOapg.properties.ytdInterestPaid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ytdInsurancePaid"]) -> MetaOapg.properties.ytdInsurancePaid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ytdTaxPaid"]) -> MetaOapg.properties.ytdTaxPaid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["autoPayEnrolled"]) -> MetaOapg.properties.autoPayEnrolled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["marginAllowed"]) -> MetaOapg.properties.marginAllowed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cashAccountAllowed"]) -> MetaOapg.properties.cashAccountAllowed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["collateral"]) -> MetaOapg.properties.collateral: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["currentSchool"]) -> MetaOapg.properties.currentSchool: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstPaymentDate"]) -> MetaOapg.properties.firstPaymentDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstMortgage"]) -> MetaOapg.properties.firstMortgage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanPaymentFreq"]) -> MetaOapg.properties.loanPaymentFreq: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["originalSchool"]) -> MetaOapg.properties.originalSchool: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recurringPaymentAmount"]) -> MetaOapg.properties.recurringPaymentAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lender"]) -> MetaOapg.properties.lender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endingBalanceAmount"]) -> MetaOapg.properties.endingBalanceAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanTermType"]) -> MetaOapg.properties.loanTermType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paymentsMade"]) -> MetaOapg.properties.paymentsMade: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["balloonAmount"]) -> MetaOapg.properties.balloonAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectedInterest"]) -> MetaOapg.properties.projectedInterest: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["interestPaidLtd"]) -> MetaOapg.properties.interestPaidLtd: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["interestRateType"]) -> MetaOapg.properties.interestRateType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanPaymentType"]) -> MetaOapg.properties.loanPaymentType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["repaymentPlan"]) -> MetaOapg.properties.repaymentPlan: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paymentsRemaining"]) -> MetaOapg.properties.paymentsRemaining: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["marginBalance"]) -> MetaOapg.properties.marginBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shortBalance"]) -> MetaOapg.properties.shortBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["availableCashBalance"]) -> MetaOapg.properties.availableCashBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maturityValueAmount"]) -> MetaOapg.properties.maturityValueAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["vestedBalance"]) -> MetaOapg.properties.vestedBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["empMatchAmount"]) -> MetaOapg.properties.empMatchAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["empPretaxContribAmount"]) -> MetaOapg.properties.empPretaxContribAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["empPretaxContribAmountYtd"]) -> MetaOapg.properties.empPretaxContribAmountYtd: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contribTotalYtd"]) -> MetaOapg.properties.contribTotalYtd: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cashBalanceAmount"]) -> MetaOapg.properties.cashBalanceAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preTaxAmount"]) -> MetaOapg.properties.preTaxAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["afterTaxAmount"]) -> MetaOapg.properties.afterTaxAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["matchAmount"]) -> MetaOapg.properties.matchAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profitSharingAmount"]) -> MetaOapg.properties.profitSharingAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rolloverAmount"]) -> MetaOapg.properties.rolloverAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["otherVestAmount"]) -> MetaOapg.properties.otherVestAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["otherNonvestAmount"]) -> MetaOapg.properties.otherNonvestAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["currentLoanBalance"]) -> MetaOapg.properties.currentLoanBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanRate"]) -> MetaOapg.properties.loanRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["buyPower"]) -> MetaOapg.properties.buyPower: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rolloverLtd"]) -> MetaOapg.properties.rolloverLtd: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanAwardId"]) -> MetaOapg.properties.loanAwardId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["originalInterestRate"]) -> MetaOapg.properties.originalInterestRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["guarantor"]) -> MetaOapg.properties.guarantor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["owner"]) -> MetaOapg.properties.owner: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["interestSubsidyType"]) -> MetaOapg.properties.interestSubsidyType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["interestBalance"]) -> MetaOapg.properties.interestBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["remainingTermOfMl"]) -> MetaOapg.properties.remainingTermOfMl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["initialInterestRate"]) -> MetaOapg.properties.initialInterestRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["feesBalance"]) -> MetaOapg.properties.feesBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanYtdInterestPaid"]) -> MetaOapg.properties.loanYtdInterestPaid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanYtdFeesPaid"]) -> MetaOapg.properties.loanYtdFeesPaid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanYtdPrincipalPaid"]) -> MetaOapg.properties.loanYtdPrincipalPaid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanStatus"]) -> MetaOapg.properties.loanStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanStatusStartDate"]) -> MetaOapg.properties.loanStatusStartDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanStatusEndDate"]) -> MetaOapg.properties.loanStatusEndDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["weightedInterestRate"]) -> MetaOapg.properties.weightedInterestRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["repaymentPlanStartDate"]) -> MetaOapg.properties.repaymentPlanStartDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["repaymentPlanEndDate"]) -> MetaOapg.properties.repaymentPlanEndDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expectedPayoffDate"]) -> MetaOapg.properties.expectedPayoffDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["outOfSchoolDate"]) -> MetaOapg.properties.outOfSchoolDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["convertToRepayment"]) -> MetaOapg.properties.convertToRepayment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["daysDelinquent"]) -> MetaOapg.properties.daysDelinquent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalPrincipalPaid"]) -> MetaOapg.properties.totalPrincipalPaid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalInterestPaid"]) -> MetaOapg.properties.totalInterestPaid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalAmountPaid"]) -> MetaOapg.properties.totalAmountPaid: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "dateAsOf", "availableBalanceAmount", "openDate", "periodStartDate", "periodEndDate", "periodInterestRate", "periodDepositAmount", "periodInterestAmount", "interestYtdAmount", "interestPriorYtdAmount", "maturityDate", "interestRate", "creditAvailableAmount", "creditMaxAmount", "cashAdvanceAvailableAmount", "cashAdvanceMaxAmount", "cashAdvanceBalance", "cashAdvanceInterestRate", "currentBalance", "paymentMinAmount", "paymentDueDate", "previousBalance", "statementStartDate", "statementEndDate", "statementPurchaseAmount", "statementFinanceAmount", "statementCreditAmount", "rewardEarnedBalance", "pastDueAmount", "lastPaymentAmount", "lastPaymentDate", "statementCloseBalance", "termOfMl", "mlHolderName", "lateFeeAmount", "payoffAmount", "payoffAmountDate", "originalMaturityDate", "principalBalance", "escrowBalance", "interestPeriod", "initialMlAmount", "initialMlDate", "nextPaymentPrincipalAmount", "nextPaymentInterestAmount", "nextPayment", "nextPaymentDate", "lastPaymentDueDate", "lastPaymentReceiveDate", "lastPaymentPrincipalAmount", "lastPaymentInterestAmount", "lastPaymentEscrowAmount", "lastPaymentLastFeeAmount", "lastPaymentLateCharge", "ytdPrincipalPaid", "ytdInterestPaid", "ytdInsurancePaid", "ytdTaxPaid", "autoPayEnrolled", "marginAllowed", "cashAccountAllowed", "collateral", "currentSchool", "firstPaymentDate", "firstMortgage", "loanPaymentFreq", "originalSchool", "recurringPaymentAmount", "lender", "endingBalanceAmount", "loanTermType", "paymentsMade", "balloonAmount", "projectedInterest", "interestPaidLtd", "interestRateType", "loanPaymentType", "repaymentPlan", "paymentsRemaining", "marginBalance", "shortBalance", "availableCashBalance", "maturityValueAmount", "vestedBalance", "empMatchAmount", "empPretaxContribAmount", "empPretaxContribAmountYtd", "contribTotalYtd", "cashBalanceAmount", "preTaxAmount", "afterTaxAmount", "matchAmount", "profitSharingAmount", "rolloverAmount", "otherVestAmount", "otherNonvestAmount", "currentLoanBalance", "loanRate", "buyPower", "rolloverLtd", "loanAwardId", "originalInterestRate", "guarantor", "owner", "interestSubsidyType", "interestBalance", "remainingTermOfMl", "initialInterestRate", "feesBalance", "loanYtdInterestPaid", "loanYtdFeesPaid", "loanYtdPrincipalPaid", "loanStatus", "loanStatusStartDate", "loanStatusEndDate", "weightedInterestRate", "repaymentPlanStartDate", "repaymentPlanEndDate", "expectedPayoffDate", "outOfSchoolDate", "convertToRepayment", "daysDelinquent", "totalPrincipalPaid", "totalInterestPaid", "totalAmountPaid", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateAsOf"]) -> typing.Union[MetaOapg.properties.dateAsOf, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["availableBalanceAmount"]) -> typing.Union[MetaOapg.properties.availableBalanceAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["openDate"]) -> typing.Union[MetaOapg.properties.openDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["periodStartDate"]) -> typing.Union[MetaOapg.properties.periodStartDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["periodEndDate"]) -> typing.Union[MetaOapg.properties.periodEndDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["periodInterestRate"]) -> typing.Union[MetaOapg.properties.periodInterestRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["periodDepositAmount"]) -> typing.Union[MetaOapg.properties.periodDepositAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["periodInterestAmount"]) -> typing.Union[MetaOapg.properties.periodInterestAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["interestYtdAmount"]) -> typing.Union[MetaOapg.properties.interestYtdAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["interestPriorYtdAmount"]) -> typing.Union[MetaOapg.properties.interestPriorYtdAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maturityDate"]) -> typing.Union[MetaOapg.properties.maturityDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["interestRate"]) -> typing.Union[MetaOapg.properties.interestRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creditAvailableAmount"]) -> typing.Union[MetaOapg.properties.creditAvailableAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creditMaxAmount"]) -> typing.Union[MetaOapg.properties.creditMaxAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cashAdvanceAvailableAmount"]) -> typing.Union[MetaOapg.properties.cashAdvanceAvailableAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cashAdvanceMaxAmount"]) -> typing.Union[MetaOapg.properties.cashAdvanceMaxAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cashAdvanceBalance"]) -> typing.Union[MetaOapg.properties.cashAdvanceBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cashAdvanceInterestRate"]) -> typing.Union[MetaOapg.properties.cashAdvanceInterestRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["currentBalance"]) -> typing.Union[MetaOapg.properties.currentBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paymentMinAmount"]) -> typing.Union[MetaOapg.properties.paymentMinAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paymentDueDate"]) -> typing.Union[MetaOapg.properties.paymentDueDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["previousBalance"]) -> typing.Union[MetaOapg.properties.previousBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statementStartDate"]) -> typing.Union[MetaOapg.properties.statementStartDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statementEndDate"]) -> typing.Union[MetaOapg.properties.statementEndDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statementPurchaseAmount"]) -> typing.Union[MetaOapg.properties.statementPurchaseAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statementFinanceAmount"]) -> typing.Union[MetaOapg.properties.statementFinanceAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statementCreditAmount"]) -> typing.Union[MetaOapg.properties.statementCreditAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rewardEarnedBalance"]) -> typing.Union[MetaOapg.properties.rewardEarnedBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pastDueAmount"]) -> typing.Union[MetaOapg.properties.pastDueAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPaymentAmount"]) -> typing.Union[MetaOapg.properties.lastPaymentAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPaymentDate"]) -> typing.Union[MetaOapg.properties.lastPaymentDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statementCloseBalance"]) -> typing.Union[MetaOapg.properties.statementCloseBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["termOfMl"]) -> typing.Union[MetaOapg.properties.termOfMl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mlHolderName"]) -> typing.Union[MetaOapg.properties.mlHolderName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lateFeeAmount"]) -> typing.Union[MetaOapg.properties.lateFeeAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payoffAmount"]) -> typing.Union[MetaOapg.properties.payoffAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payoffAmountDate"]) -> typing.Union[MetaOapg.properties.payoffAmountDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["originalMaturityDate"]) -> typing.Union[MetaOapg.properties.originalMaturityDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["principalBalance"]) -> typing.Union[MetaOapg.properties.principalBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["escrowBalance"]) -> typing.Union[MetaOapg.properties.escrowBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["interestPeriod"]) -> typing.Union[MetaOapg.properties.interestPeriod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["initialMlAmount"]) -> typing.Union[MetaOapg.properties.initialMlAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["initialMlDate"]) -> typing.Union[MetaOapg.properties.initialMlDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nextPaymentPrincipalAmount"]) -> typing.Union[MetaOapg.properties.nextPaymentPrincipalAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nextPaymentInterestAmount"]) -> typing.Union[MetaOapg.properties.nextPaymentInterestAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nextPayment"]) -> typing.Union[MetaOapg.properties.nextPayment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nextPaymentDate"]) -> typing.Union[MetaOapg.properties.nextPaymentDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPaymentDueDate"]) -> typing.Union[MetaOapg.properties.lastPaymentDueDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPaymentReceiveDate"]) -> typing.Union[MetaOapg.properties.lastPaymentReceiveDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPaymentPrincipalAmount"]) -> typing.Union[MetaOapg.properties.lastPaymentPrincipalAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPaymentInterestAmount"]) -> typing.Union[MetaOapg.properties.lastPaymentInterestAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPaymentEscrowAmount"]) -> typing.Union[MetaOapg.properties.lastPaymentEscrowAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPaymentLastFeeAmount"]) -> typing.Union[MetaOapg.properties.lastPaymentLastFeeAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPaymentLateCharge"]) -> typing.Union[MetaOapg.properties.lastPaymentLateCharge, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ytdPrincipalPaid"]) -> typing.Union[MetaOapg.properties.ytdPrincipalPaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ytdInterestPaid"]) -> typing.Union[MetaOapg.properties.ytdInterestPaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ytdInsurancePaid"]) -> typing.Union[MetaOapg.properties.ytdInsurancePaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ytdTaxPaid"]) -> typing.Union[MetaOapg.properties.ytdTaxPaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["autoPayEnrolled"]) -> typing.Union[MetaOapg.properties.autoPayEnrolled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["marginAllowed"]) -> typing.Union[MetaOapg.properties.marginAllowed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cashAccountAllowed"]) -> typing.Union[MetaOapg.properties.cashAccountAllowed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["collateral"]) -> typing.Union[MetaOapg.properties.collateral, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["currentSchool"]) -> typing.Union[MetaOapg.properties.currentSchool, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstPaymentDate"]) -> typing.Union[MetaOapg.properties.firstPaymentDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstMortgage"]) -> typing.Union[MetaOapg.properties.firstMortgage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanPaymentFreq"]) -> typing.Union[MetaOapg.properties.loanPaymentFreq, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["originalSchool"]) -> typing.Union[MetaOapg.properties.originalSchool, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recurringPaymentAmount"]) -> typing.Union[MetaOapg.properties.recurringPaymentAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lender"]) -> typing.Union[MetaOapg.properties.lender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endingBalanceAmount"]) -> typing.Union[MetaOapg.properties.endingBalanceAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanTermType"]) -> typing.Union[MetaOapg.properties.loanTermType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paymentsMade"]) -> typing.Union[MetaOapg.properties.paymentsMade, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["balloonAmount"]) -> typing.Union[MetaOapg.properties.balloonAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectedInterest"]) -> typing.Union[MetaOapg.properties.projectedInterest, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["interestPaidLtd"]) -> typing.Union[MetaOapg.properties.interestPaidLtd, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["interestRateType"]) -> typing.Union[MetaOapg.properties.interestRateType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanPaymentType"]) -> typing.Union[MetaOapg.properties.loanPaymentType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["repaymentPlan"]) -> typing.Union[MetaOapg.properties.repaymentPlan, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paymentsRemaining"]) -> typing.Union[MetaOapg.properties.paymentsRemaining, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["marginBalance"]) -> typing.Union[MetaOapg.properties.marginBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shortBalance"]) -> typing.Union[MetaOapg.properties.shortBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["availableCashBalance"]) -> typing.Union[MetaOapg.properties.availableCashBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maturityValueAmount"]) -> typing.Union[MetaOapg.properties.maturityValueAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["vestedBalance"]) -> typing.Union[MetaOapg.properties.vestedBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["empMatchAmount"]) -> typing.Union[MetaOapg.properties.empMatchAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["empPretaxContribAmount"]) -> typing.Union[MetaOapg.properties.empPretaxContribAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["empPretaxContribAmountYtd"]) -> typing.Union[MetaOapg.properties.empPretaxContribAmountYtd, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contribTotalYtd"]) -> typing.Union[MetaOapg.properties.contribTotalYtd, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cashBalanceAmount"]) -> typing.Union[MetaOapg.properties.cashBalanceAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preTaxAmount"]) -> typing.Union[MetaOapg.properties.preTaxAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["afterTaxAmount"]) -> typing.Union[MetaOapg.properties.afterTaxAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["matchAmount"]) -> typing.Union[MetaOapg.properties.matchAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profitSharingAmount"]) -> typing.Union[MetaOapg.properties.profitSharingAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rolloverAmount"]) -> typing.Union[MetaOapg.properties.rolloverAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["otherVestAmount"]) -> typing.Union[MetaOapg.properties.otherVestAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["otherNonvestAmount"]) -> typing.Union[MetaOapg.properties.otherNonvestAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["currentLoanBalance"]) -> typing.Union[MetaOapg.properties.currentLoanBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanRate"]) -> typing.Union[MetaOapg.properties.loanRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["buyPower"]) -> typing.Union[MetaOapg.properties.buyPower, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rolloverLtd"]) -> typing.Union[MetaOapg.properties.rolloverLtd, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanAwardId"]) -> typing.Union[MetaOapg.properties.loanAwardId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["originalInterestRate"]) -> typing.Union[MetaOapg.properties.originalInterestRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["guarantor"]) -> typing.Union[MetaOapg.properties.guarantor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["owner"]) -> typing.Union[MetaOapg.properties.owner, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["interestSubsidyType"]) -> typing.Union[MetaOapg.properties.interestSubsidyType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["interestBalance"]) -> typing.Union[MetaOapg.properties.interestBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["remainingTermOfMl"]) -> typing.Union[MetaOapg.properties.remainingTermOfMl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["initialInterestRate"]) -> typing.Union[MetaOapg.properties.initialInterestRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["feesBalance"]) -> typing.Union[MetaOapg.properties.feesBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanYtdInterestPaid"]) -> typing.Union[MetaOapg.properties.loanYtdInterestPaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanYtdFeesPaid"]) -> typing.Union[MetaOapg.properties.loanYtdFeesPaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanYtdPrincipalPaid"]) -> typing.Union[MetaOapg.properties.loanYtdPrincipalPaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanStatus"]) -> typing.Union[MetaOapg.properties.loanStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanStatusStartDate"]) -> typing.Union[MetaOapg.properties.loanStatusStartDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanStatusEndDate"]) -> typing.Union[MetaOapg.properties.loanStatusEndDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["weightedInterestRate"]) -> typing.Union[MetaOapg.properties.weightedInterestRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["repaymentPlanStartDate"]) -> typing.Union[MetaOapg.properties.repaymentPlanStartDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["repaymentPlanEndDate"]) -> typing.Union[MetaOapg.properties.repaymentPlanEndDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expectedPayoffDate"]) -> typing.Union[MetaOapg.properties.expectedPayoffDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["outOfSchoolDate"]) -> typing.Union[MetaOapg.properties.outOfSchoolDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["convertToRepayment"]) -> typing.Union[MetaOapg.properties.convertToRepayment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["daysDelinquent"]) -> typing.Union[MetaOapg.properties.daysDelinquent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalPrincipalPaid"]) -> typing.Union[MetaOapg.properties.totalPrincipalPaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalInterestPaid"]) -> typing.Union[MetaOapg.properties.totalInterestPaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalAmountPaid"]) -> typing.Union[MetaOapg.properties.totalAmountPaid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "dateAsOf", "availableBalanceAmount", "openDate", "periodStartDate", "periodEndDate", "periodInterestRate", "periodDepositAmount", "periodInterestAmount", "interestYtdAmount", "interestPriorYtdAmount", "maturityDate", "interestRate", "creditAvailableAmount", "creditMaxAmount", "cashAdvanceAvailableAmount", "cashAdvanceMaxAmount", "cashAdvanceBalance", "cashAdvanceInterestRate", "currentBalance", "paymentMinAmount", "paymentDueDate", "previousBalance", "statementStartDate", "statementEndDate", "statementPurchaseAmount", "statementFinanceAmount", "statementCreditAmount", "rewardEarnedBalance", "pastDueAmount", "lastPaymentAmount", "lastPaymentDate", "statementCloseBalance", "termOfMl", "mlHolderName", "lateFeeAmount", "payoffAmount", "payoffAmountDate", "originalMaturityDate", "principalBalance", "escrowBalance", "interestPeriod", "initialMlAmount", "initialMlDate", "nextPaymentPrincipalAmount", "nextPaymentInterestAmount", "nextPayment", "nextPaymentDate", "lastPaymentDueDate", "lastPaymentReceiveDate", "lastPaymentPrincipalAmount", "lastPaymentInterestAmount", "lastPaymentEscrowAmount", "lastPaymentLastFeeAmount", "lastPaymentLateCharge", "ytdPrincipalPaid", "ytdInterestPaid", "ytdInsurancePaid", "ytdTaxPaid", "autoPayEnrolled", "marginAllowed", "cashAccountAllowed", "collateral", "currentSchool", "firstPaymentDate", "firstMortgage", "loanPaymentFreq", "originalSchool", "recurringPaymentAmount", "lender", "endingBalanceAmount", "loanTermType", "paymentsMade", "balloonAmount", "projectedInterest", "interestPaidLtd", "interestRateType", "loanPaymentType", "repaymentPlan", "paymentsRemaining", "marginBalance", "shortBalance", "availableCashBalance", "maturityValueAmount", "vestedBalance", "empMatchAmount", "empPretaxContribAmount", "empPretaxContribAmountYtd", "contribTotalYtd", "cashBalanceAmount", "preTaxAmount", "afterTaxAmount", "matchAmount", "profitSharingAmount", "rolloverAmount", "otherVestAmount", "otherNonvestAmount", "currentLoanBalance", "loanRate", "buyPower", "rolloverLtd", "loanAwardId", "originalInterestRate", "guarantor", "owner", "interestSubsidyType", "interestBalance", "remainingTermOfMl", "initialInterestRate", "feesBalance", "loanYtdInterestPaid", "loanYtdFeesPaid", "loanYtdPrincipalPaid", "loanStatus", "loanStatusStartDate", "loanStatusEndDate", "weightedInterestRate", "repaymentPlanStartDate", "repaymentPlanEndDate", "expectedPayoffDate", "outOfSchoolDate", "convertToRepayment", "daysDelinquent", "totalPrincipalPaid", "totalInterestPaid", "totalAmountPaid", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        dateAsOf: typing.Union[MetaOapg.properties.dateAsOf, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        availableBalanceAmount: typing.Union[MetaOapg.properties.availableBalanceAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        openDate: typing.Union[MetaOapg.properties.openDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        periodStartDate: typing.Union[MetaOapg.properties.periodStartDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        periodEndDate: typing.Union[MetaOapg.properties.periodEndDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        periodInterestRate: typing.Union[MetaOapg.properties.periodInterestRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        periodDepositAmount: typing.Union[MetaOapg.properties.periodDepositAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        periodInterestAmount: typing.Union[MetaOapg.properties.periodInterestAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        interestYtdAmount: typing.Union[MetaOapg.properties.interestYtdAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        interestPriorYtdAmount: typing.Union[MetaOapg.properties.interestPriorYtdAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        maturityDate: typing.Union[MetaOapg.properties.maturityDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        interestRate: typing.Union[MetaOapg.properties.interestRate, str, schemas.Unset] = schemas.unset,
        creditAvailableAmount: typing.Union[MetaOapg.properties.creditAvailableAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        creditMaxAmount: typing.Union[MetaOapg.properties.creditMaxAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        cashAdvanceAvailableAmount: typing.Union[MetaOapg.properties.cashAdvanceAvailableAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        cashAdvanceMaxAmount: typing.Union[MetaOapg.properties.cashAdvanceMaxAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        cashAdvanceBalance: typing.Union[MetaOapg.properties.cashAdvanceBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        cashAdvanceInterestRate: typing.Union[MetaOapg.properties.cashAdvanceInterestRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        currentBalance: typing.Union[MetaOapg.properties.currentBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        paymentMinAmount: typing.Union[MetaOapg.properties.paymentMinAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        paymentDueDate: typing.Union[MetaOapg.properties.paymentDueDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        previousBalance: typing.Union[MetaOapg.properties.previousBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        statementStartDate: typing.Union[MetaOapg.properties.statementStartDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        statementEndDate: typing.Union[MetaOapg.properties.statementEndDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        statementPurchaseAmount: typing.Union[MetaOapg.properties.statementPurchaseAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        statementFinanceAmount: typing.Union[MetaOapg.properties.statementFinanceAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        statementCreditAmount: typing.Union[MetaOapg.properties.statementCreditAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rewardEarnedBalance: typing.Union[MetaOapg.properties.rewardEarnedBalance, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        pastDueAmount: typing.Union[MetaOapg.properties.pastDueAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lastPaymentAmount: typing.Union[MetaOapg.properties.lastPaymentAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lastPaymentDate: typing.Union[MetaOapg.properties.lastPaymentDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        statementCloseBalance: typing.Union[MetaOapg.properties.statementCloseBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        termOfMl: typing.Union[MetaOapg.properties.termOfMl, str, schemas.Unset] = schemas.unset,
        mlHolderName: typing.Union[MetaOapg.properties.mlHolderName, str, schemas.Unset] = schemas.unset,
        lateFeeAmount: typing.Union[MetaOapg.properties.lateFeeAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        payoffAmount: typing.Union[MetaOapg.properties.payoffAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        payoffAmountDate: typing.Union[MetaOapg.properties.payoffAmountDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        originalMaturityDate: typing.Union[MetaOapg.properties.originalMaturityDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        principalBalance: typing.Union[MetaOapg.properties.principalBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        escrowBalance: typing.Union[MetaOapg.properties.escrowBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        interestPeriod: typing.Union[MetaOapg.properties.interestPeriod, str, schemas.Unset] = schemas.unset,
        initialMlAmount: typing.Union[MetaOapg.properties.initialMlAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        initialMlDate: typing.Union[MetaOapg.properties.initialMlDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        nextPaymentPrincipalAmount: typing.Union[MetaOapg.properties.nextPaymentPrincipalAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nextPaymentInterestAmount: typing.Union[MetaOapg.properties.nextPaymentInterestAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nextPayment: typing.Union[MetaOapg.properties.nextPayment, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nextPaymentDate: typing.Union[MetaOapg.properties.nextPaymentDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lastPaymentDueDate: typing.Union[MetaOapg.properties.lastPaymentDueDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lastPaymentReceiveDate: typing.Union[MetaOapg.properties.lastPaymentReceiveDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lastPaymentPrincipalAmount: typing.Union[MetaOapg.properties.lastPaymentPrincipalAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lastPaymentInterestAmount: typing.Union[MetaOapg.properties.lastPaymentInterestAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lastPaymentEscrowAmount: typing.Union[MetaOapg.properties.lastPaymentEscrowAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lastPaymentLastFeeAmount: typing.Union[MetaOapg.properties.lastPaymentLastFeeAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lastPaymentLateCharge: typing.Union[MetaOapg.properties.lastPaymentLateCharge, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ytdPrincipalPaid: typing.Union[MetaOapg.properties.ytdPrincipalPaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ytdInterestPaid: typing.Union[MetaOapg.properties.ytdInterestPaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ytdInsurancePaid: typing.Union[MetaOapg.properties.ytdInsurancePaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ytdTaxPaid: typing.Union[MetaOapg.properties.ytdTaxPaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        autoPayEnrolled: typing.Union[MetaOapg.properties.autoPayEnrolled, bool, schemas.Unset] = schemas.unset,
        marginAllowed: typing.Union[MetaOapg.properties.marginAllowed, bool, schemas.Unset] = schemas.unset,
        cashAccountAllowed: typing.Union[MetaOapg.properties.cashAccountAllowed, bool, schemas.Unset] = schemas.unset,
        collateral: typing.Union[MetaOapg.properties.collateral, str, schemas.Unset] = schemas.unset,
        currentSchool: typing.Union[MetaOapg.properties.currentSchool, str, schemas.Unset] = schemas.unset,
        firstPaymentDate: typing.Union[MetaOapg.properties.firstPaymentDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        firstMortgage: typing.Union[MetaOapg.properties.firstMortgage, bool, schemas.Unset] = schemas.unset,
        loanPaymentFreq: typing.Union[MetaOapg.properties.loanPaymentFreq, str, schemas.Unset] = schemas.unset,
        originalSchool: typing.Union[MetaOapg.properties.originalSchool, str, schemas.Unset] = schemas.unset,
        recurringPaymentAmount: typing.Union[MetaOapg.properties.recurringPaymentAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lender: typing.Union[MetaOapg.properties.lender, str, schemas.Unset] = schemas.unset,
        endingBalanceAmount: typing.Union[MetaOapg.properties.endingBalanceAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        loanTermType: typing.Union[MetaOapg.properties.loanTermType, str, schemas.Unset] = schemas.unset,
        paymentsMade: typing.Union[MetaOapg.properties.paymentsMade, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        balloonAmount: typing.Union[MetaOapg.properties.balloonAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        projectedInterest: typing.Union[MetaOapg.properties.projectedInterest, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        interestPaidLtd: typing.Union[MetaOapg.properties.interestPaidLtd, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        interestRateType: typing.Union[MetaOapg.properties.interestRateType, str, schemas.Unset] = schemas.unset,
        loanPaymentType: typing.Union[MetaOapg.properties.loanPaymentType, str, schemas.Unset] = schemas.unset,
        repaymentPlan: typing.Union[MetaOapg.properties.repaymentPlan, str, schemas.Unset] = schemas.unset,
        paymentsRemaining: typing.Union[MetaOapg.properties.paymentsRemaining, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        marginBalance: typing.Union[MetaOapg.properties.marginBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        shortBalance: typing.Union[MetaOapg.properties.shortBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        availableCashBalance: typing.Union[MetaOapg.properties.availableCashBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        maturityValueAmount: typing.Union[MetaOapg.properties.maturityValueAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        vestedBalance: typing.Union[MetaOapg.properties.vestedBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        empMatchAmount: typing.Union[MetaOapg.properties.empMatchAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        empPretaxContribAmount: typing.Union[MetaOapg.properties.empPretaxContribAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        empPretaxContribAmountYtd: typing.Union[MetaOapg.properties.empPretaxContribAmountYtd, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        contribTotalYtd: typing.Union[MetaOapg.properties.contribTotalYtd, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        cashBalanceAmount: typing.Union[MetaOapg.properties.cashBalanceAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        preTaxAmount: typing.Union[MetaOapg.properties.preTaxAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        afterTaxAmount: typing.Union[MetaOapg.properties.afterTaxAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        matchAmount: typing.Union[MetaOapg.properties.matchAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        profitSharingAmount: typing.Union[MetaOapg.properties.profitSharingAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rolloverAmount: typing.Union[MetaOapg.properties.rolloverAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        otherVestAmount: typing.Union[MetaOapg.properties.otherVestAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        otherNonvestAmount: typing.Union[MetaOapg.properties.otherNonvestAmount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        currentLoanBalance: typing.Union[MetaOapg.properties.currentLoanBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        loanRate: typing.Union[MetaOapg.properties.loanRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        buyPower: typing.Union[MetaOapg.properties.buyPower, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rolloverLtd: typing.Union[MetaOapg.properties.rolloverLtd, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        loanAwardId: typing.Union[MetaOapg.properties.loanAwardId, str, schemas.Unset] = schemas.unset,
        originalInterestRate: typing.Union[MetaOapg.properties.originalInterestRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        guarantor: typing.Union[MetaOapg.properties.guarantor, str, schemas.Unset] = schemas.unset,
        owner: typing.Union[MetaOapg.properties.owner, str, schemas.Unset] = schemas.unset,
        interestSubsidyType: typing.Union[MetaOapg.properties.interestSubsidyType, str, schemas.Unset] = schemas.unset,
        interestBalance: typing.Union[MetaOapg.properties.interestBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        remainingTermOfMl: typing.Union[MetaOapg.properties.remainingTermOfMl, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        initialInterestRate: typing.Union[MetaOapg.properties.initialInterestRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        feesBalance: typing.Union[MetaOapg.properties.feesBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        loanYtdInterestPaid: typing.Union[MetaOapg.properties.loanYtdInterestPaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        loanYtdFeesPaid: typing.Union[MetaOapg.properties.loanYtdFeesPaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        loanYtdPrincipalPaid: typing.Union[MetaOapg.properties.loanYtdPrincipalPaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        loanStatus: typing.Union[MetaOapg.properties.loanStatus, str, schemas.Unset] = schemas.unset,
        loanStatusStartDate: typing.Union[MetaOapg.properties.loanStatusStartDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        loanStatusEndDate: typing.Union[MetaOapg.properties.loanStatusEndDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        weightedInterestRate: typing.Union[MetaOapg.properties.weightedInterestRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        repaymentPlanStartDate: typing.Union[MetaOapg.properties.repaymentPlanStartDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        repaymentPlanEndDate: typing.Union[MetaOapg.properties.repaymentPlanEndDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        expectedPayoffDate: typing.Union[MetaOapg.properties.expectedPayoffDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        outOfSchoolDate: typing.Union[MetaOapg.properties.outOfSchoolDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        convertToRepayment: typing.Union[MetaOapg.properties.convertToRepayment, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        daysDelinquent: typing.Union[MetaOapg.properties.daysDelinquent, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        totalPrincipalPaid: typing.Union[MetaOapg.properties.totalPrincipalPaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        totalInterestPaid: typing.Union[MetaOapg.properties.totalInterestPaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        totalAmountPaid: typing.Union[MetaOapg.properties.totalAmountPaid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CustomerAccountDetail':
        return super().__new__(
            cls,
            *args,
            description=description,
            dateAsOf=dateAsOf,
            availableBalanceAmount=availableBalanceAmount,
            openDate=openDate,
            periodStartDate=periodStartDate,
            periodEndDate=periodEndDate,
            periodInterestRate=periodInterestRate,
            periodDepositAmount=periodDepositAmount,
            periodInterestAmount=periodInterestAmount,
            interestYtdAmount=interestYtdAmount,
            interestPriorYtdAmount=interestPriorYtdAmount,
            maturityDate=maturityDate,
            interestRate=interestRate,
            creditAvailableAmount=creditAvailableAmount,
            creditMaxAmount=creditMaxAmount,
            cashAdvanceAvailableAmount=cashAdvanceAvailableAmount,
            cashAdvanceMaxAmount=cashAdvanceMaxAmount,
            cashAdvanceBalance=cashAdvanceBalance,
            cashAdvanceInterestRate=cashAdvanceInterestRate,
            currentBalance=currentBalance,
            paymentMinAmount=paymentMinAmount,
            paymentDueDate=paymentDueDate,
            previousBalance=previousBalance,
            statementStartDate=statementStartDate,
            statementEndDate=statementEndDate,
            statementPurchaseAmount=statementPurchaseAmount,
            statementFinanceAmount=statementFinanceAmount,
            statementCreditAmount=statementCreditAmount,
            rewardEarnedBalance=rewardEarnedBalance,
            pastDueAmount=pastDueAmount,
            lastPaymentAmount=lastPaymentAmount,
            lastPaymentDate=lastPaymentDate,
            statementCloseBalance=statementCloseBalance,
            termOfMl=termOfMl,
            mlHolderName=mlHolderName,
            lateFeeAmount=lateFeeAmount,
            payoffAmount=payoffAmount,
            payoffAmountDate=payoffAmountDate,
            originalMaturityDate=originalMaturityDate,
            principalBalance=principalBalance,
            escrowBalance=escrowBalance,
            interestPeriod=interestPeriod,
            initialMlAmount=initialMlAmount,
            initialMlDate=initialMlDate,
            nextPaymentPrincipalAmount=nextPaymentPrincipalAmount,
            nextPaymentInterestAmount=nextPaymentInterestAmount,
            nextPayment=nextPayment,
            nextPaymentDate=nextPaymentDate,
            lastPaymentDueDate=lastPaymentDueDate,
            lastPaymentReceiveDate=lastPaymentReceiveDate,
            lastPaymentPrincipalAmount=lastPaymentPrincipalAmount,
            lastPaymentInterestAmount=lastPaymentInterestAmount,
            lastPaymentEscrowAmount=lastPaymentEscrowAmount,
            lastPaymentLastFeeAmount=lastPaymentLastFeeAmount,
            lastPaymentLateCharge=lastPaymentLateCharge,
            ytdPrincipalPaid=ytdPrincipalPaid,
            ytdInterestPaid=ytdInterestPaid,
            ytdInsurancePaid=ytdInsurancePaid,
            ytdTaxPaid=ytdTaxPaid,
            autoPayEnrolled=autoPayEnrolled,
            marginAllowed=marginAllowed,
            cashAccountAllowed=cashAccountAllowed,
            collateral=collateral,
            currentSchool=currentSchool,
            firstPaymentDate=firstPaymentDate,
            firstMortgage=firstMortgage,
            loanPaymentFreq=loanPaymentFreq,
            originalSchool=originalSchool,
            recurringPaymentAmount=recurringPaymentAmount,
            lender=lender,
            endingBalanceAmount=endingBalanceAmount,
            loanTermType=loanTermType,
            paymentsMade=paymentsMade,
            balloonAmount=balloonAmount,
            projectedInterest=projectedInterest,
            interestPaidLtd=interestPaidLtd,
            interestRateType=interestRateType,
            loanPaymentType=loanPaymentType,
            repaymentPlan=repaymentPlan,
            paymentsRemaining=paymentsRemaining,
            marginBalance=marginBalance,
            shortBalance=shortBalance,
            availableCashBalance=availableCashBalance,
            maturityValueAmount=maturityValueAmount,
            vestedBalance=vestedBalance,
            empMatchAmount=empMatchAmount,
            empPretaxContribAmount=empPretaxContribAmount,
            empPretaxContribAmountYtd=empPretaxContribAmountYtd,
            contribTotalYtd=contribTotalYtd,
            cashBalanceAmount=cashBalanceAmount,
            preTaxAmount=preTaxAmount,
            afterTaxAmount=afterTaxAmount,
            matchAmount=matchAmount,
            profitSharingAmount=profitSharingAmount,
            rolloverAmount=rolloverAmount,
            otherVestAmount=otherVestAmount,
            otherNonvestAmount=otherNonvestAmount,
            currentLoanBalance=currentLoanBalance,
            loanRate=loanRate,
            buyPower=buyPower,
            rolloverLtd=rolloverLtd,
            loanAwardId=loanAwardId,
            originalInterestRate=originalInterestRate,
            guarantor=guarantor,
            owner=owner,
            interestSubsidyType=interestSubsidyType,
            interestBalance=interestBalance,
            remainingTermOfMl=remainingTermOfMl,
            initialInterestRate=initialInterestRate,
            feesBalance=feesBalance,
            loanYtdInterestPaid=loanYtdInterestPaid,
            loanYtdFeesPaid=loanYtdFeesPaid,
            loanYtdPrincipalPaid=loanYtdPrincipalPaid,
            loanStatus=loanStatus,
            loanStatusStartDate=loanStatusStartDate,
            loanStatusEndDate=loanStatusEndDate,
            weightedInterestRate=weightedInterestRate,
            repaymentPlanStartDate=repaymentPlanStartDate,
            repaymentPlanEndDate=repaymentPlanEndDate,
            expectedPayoffDate=expectedPayoffDate,
            outOfSchoolDate=outOfSchoolDate,
            convertToRepayment=convertToRepayment,
            daysDelinquent=daysDelinquent,
            totalPrincipalPaid=totalPrincipalPaid,
            totalInterestPaid=totalInterestPaid,
            totalAmountPaid=totalAmountPaid,
            _configuration=_configuration,
            **kwargs,
        )
