# coding: utf-8

"""
    Open Banking

    OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.16.0
    Contact: apisupport@mastercard.com
    Created by: https://developer.mastercard.com/open-banking-us/documentation/support/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from mastercard_python_sdk import schemas  # noqa: F401


class PayrollEmploymentRecord(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "workLevelStatus",
            "employmentStatusCode",
            "employerName",
            "employmentStatusName",
        }
        
        class properties:
            employerName = schemas.StrSchema
            employmentStatusCode = schemas.StrSchema
            employmentStatusName = schemas.StrSchema
            workLevelStatus = schemas.StrSchema
            legalEntityId = schemas.StrSchema
            originalHireDate = schemas.Int64Schema
            latestHireDate = schemas.Int64Schema
            latestPayPeriodEndDate = schemas.Int64Schema
            latestPayDate = schemas.Int64Schema
            daysSinceLastPay = schemas.Int32Schema
            numberPayCadenceWithoutPay = schemas.Int32Schema
            employmentEndDate = schemas.Int64Schema
            employmentDuration = schemas.StrSchema
            
            
            class employerAddress(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['PayrollEmployerAddress']:
                        return PayrollEmployerAddress
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['PayrollEmployerAddress'], typing.List['PayrollEmployerAddress']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'employerAddress':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'PayrollEmployerAddress':
                    return super().__getitem__(i)
            derivedEmploymentStatus = schemas.BoolSchema
            workLevelCode = schemas.StrSchema
            workLevelName = schemas.StrSchema
            positionTitle = schemas.StrSchema
            positionDuration = schemas.StrSchema
            __annotations__ = {
                "employerName": employerName,
                "employmentStatusCode": employmentStatusCode,
                "employmentStatusName": employmentStatusName,
                "workLevelStatus": workLevelStatus,
                "legalEntityId": legalEntityId,
                "originalHireDate": originalHireDate,
                "latestHireDate": latestHireDate,
                "latestPayPeriodEndDate": latestPayPeriodEndDate,
                "latestPayDate": latestPayDate,
                "daysSinceLastPay": daysSinceLastPay,
                "numberPayCadenceWithoutPay": numberPayCadenceWithoutPay,
                "employmentEndDate": employmentEndDate,
                "employmentDuration": employmentDuration,
                "employerAddress": employerAddress,
                "derivedEmploymentStatus": derivedEmploymentStatus,
                "workLevelCode": workLevelCode,
                "workLevelName": workLevelName,
                "positionTitle": positionTitle,
                "positionDuration": positionDuration,
            }
    
    workLevelStatus: MetaOapg.properties.workLevelStatus
    employmentStatusCode: MetaOapg.properties.employmentStatusCode
    employerName: MetaOapg.properties.employerName
    employmentStatusName: MetaOapg.properties.employmentStatusName
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employerName"]) -> MetaOapg.properties.employerName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employmentStatusCode"]) -> MetaOapg.properties.employmentStatusCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employmentStatusName"]) -> MetaOapg.properties.employmentStatusName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workLevelStatus"]) -> MetaOapg.properties.workLevelStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["legalEntityId"]) -> MetaOapg.properties.legalEntityId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["originalHireDate"]) -> MetaOapg.properties.originalHireDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["latestHireDate"]) -> MetaOapg.properties.latestHireDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["latestPayPeriodEndDate"]) -> MetaOapg.properties.latestPayPeriodEndDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["latestPayDate"]) -> MetaOapg.properties.latestPayDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["daysSinceLastPay"]) -> MetaOapg.properties.daysSinceLastPay: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["numberPayCadenceWithoutPay"]) -> MetaOapg.properties.numberPayCadenceWithoutPay: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employmentEndDate"]) -> MetaOapg.properties.employmentEndDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employmentDuration"]) -> MetaOapg.properties.employmentDuration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employerAddress"]) -> MetaOapg.properties.employerAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["derivedEmploymentStatus"]) -> MetaOapg.properties.derivedEmploymentStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workLevelCode"]) -> MetaOapg.properties.workLevelCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workLevelName"]) -> MetaOapg.properties.workLevelName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["positionTitle"]) -> MetaOapg.properties.positionTitle: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["positionDuration"]) -> MetaOapg.properties.positionDuration: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["employerName", "employmentStatusCode", "employmentStatusName", "workLevelStatus", "legalEntityId", "originalHireDate", "latestHireDate", "latestPayPeriodEndDate", "latestPayDate", "daysSinceLastPay", "numberPayCadenceWithoutPay", "employmentEndDate", "employmentDuration", "employerAddress", "derivedEmploymentStatus", "workLevelCode", "workLevelName", "positionTitle", "positionDuration", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employerName"]) -> MetaOapg.properties.employerName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employmentStatusCode"]) -> MetaOapg.properties.employmentStatusCode: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employmentStatusName"]) -> MetaOapg.properties.employmentStatusName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workLevelStatus"]) -> MetaOapg.properties.workLevelStatus: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["legalEntityId"]) -> typing.Union[MetaOapg.properties.legalEntityId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["originalHireDate"]) -> typing.Union[MetaOapg.properties.originalHireDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["latestHireDate"]) -> typing.Union[MetaOapg.properties.latestHireDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["latestPayPeriodEndDate"]) -> typing.Union[MetaOapg.properties.latestPayPeriodEndDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["latestPayDate"]) -> typing.Union[MetaOapg.properties.latestPayDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["daysSinceLastPay"]) -> typing.Union[MetaOapg.properties.daysSinceLastPay, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["numberPayCadenceWithoutPay"]) -> typing.Union[MetaOapg.properties.numberPayCadenceWithoutPay, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employmentEndDate"]) -> typing.Union[MetaOapg.properties.employmentEndDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employmentDuration"]) -> typing.Union[MetaOapg.properties.employmentDuration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employerAddress"]) -> typing.Union[MetaOapg.properties.employerAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["derivedEmploymentStatus"]) -> typing.Union[MetaOapg.properties.derivedEmploymentStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workLevelCode"]) -> typing.Union[MetaOapg.properties.workLevelCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workLevelName"]) -> typing.Union[MetaOapg.properties.workLevelName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["positionTitle"]) -> typing.Union[MetaOapg.properties.positionTitle, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["positionDuration"]) -> typing.Union[MetaOapg.properties.positionDuration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["employerName", "employmentStatusCode", "employmentStatusName", "workLevelStatus", "legalEntityId", "originalHireDate", "latestHireDate", "latestPayPeriodEndDate", "latestPayDate", "daysSinceLastPay", "numberPayCadenceWithoutPay", "employmentEndDate", "employmentDuration", "employerAddress", "derivedEmploymentStatus", "workLevelCode", "workLevelName", "positionTitle", "positionDuration", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        workLevelStatus: typing.Union[MetaOapg.properties.workLevelStatus, str, ],
        employmentStatusCode: typing.Union[MetaOapg.properties.employmentStatusCode, str, ],
        employerName: typing.Union[MetaOapg.properties.employerName, str, ],
        employmentStatusName: typing.Union[MetaOapg.properties.employmentStatusName, str, ],
        legalEntityId: typing.Union[MetaOapg.properties.legalEntityId, str, schemas.Unset] = schemas.unset,
        originalHireDate: typing.Union[MetaOapg.properties.originalHireDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        latestHireDate: typing.Union[MetaOapg.properties.latestHireDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        latestPayPeriodEndDate: typing.Union[MetaOapg.properties.latestPayPeriodEndDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        latestPayDate: typing.Union[MetaOapg.properties.latestPayDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        daysSinceLastPay: typing.Union[MetaOapg.properties.daysSinceLastPay, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        numberPayCadenceWithoutPay: typing.Union[MetaOapg.properties.numberPayCadenceWithoutPay, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        employmentEndDate: typing.Union[MetaOapg.properties.employmentEndDate, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        employmentDuration: typing.Union[MetaOapg.properties.employmentDuration, str, schemas.Unset] = schemas.unset,
        employerAddress: typing.Union[MetaOapg.properties.employerAddress, list, tuple, schemas.Unset] = schemas.unset,
        derivedEmploymentStatus: typing.Union[MetaOapg.properties.derivedEmploymentStatus, bool, schemas.Unset] = schemas.unset,
        workLevelCode: typing.Union[MetaOapg.properties.workLevelCode, str, schemas.Unset] = schemas.unset,
        workLevelName: typing.Union[MetaOapg.properties.workLevelName, str, schemas.Unset] = schemas.unset,
        positionTitle: typing.Union[MetaOapg.properties.positionTitle, str, schemas.Unset] = schemas.unset,
        positionDuration: typing.Union[MetaOapg.properties.positionDuration, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PayrollEmploymentRecord':
        return super().__new__(
            cls,
            *args,
            workLevelStatus=workLevelStatus,
            employmentStatusCode=employmentStatusCode,
            employerName=employerName,
            employmentStatusName=employmentStatusName,
            legalEntityId=legalEntityId,
            originalHireDate=originalHireDate,
            latestHireDate=latestHireDate,
            latestPayPeriodEndDate=latestPayPeriodEndDate,
            latestPayDate=latestPayDate,
            daysSinceLastPay=daysSinceLastPay,
            numberPayCadenceWithoutPay=numberPayCadenceWithoutPay,
            employmentEndDate=employmentEndDate,
            employmentDuration=employmentDuration,
            employerAddress=employerAddress,
            derivedEmploymentStatus=derivedEmploymentStatus,
            workLevelCode=workLevelCode,
            workLevelName=workLevelName,
            positionTitle=positionTitle,
            positionDuration=positionDuration,
            _configuration=_configuration,
            **kwargs,
        )

from mastercard_python_sdk.model.payroll_employer_address import PayrollEmployerAddress
