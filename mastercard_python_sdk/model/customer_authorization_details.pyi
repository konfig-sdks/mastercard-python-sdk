# coding: utf-8

"""
    Open Banking

    OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.16.0
    Contact: apisupport@mastercard.com
    Created by: https://developer.mastercard.com/open-banking-us/documentation/support/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from mastercard_python_sdk import schemas  # noqa: F401


class CustomerAuthorizationDetails(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "institutionLoginId",
            "authorizationEndDate",
            "authorizationStartDate",
        }
        
        class properties:
            institutionLoginId = schemas.Int64Schema
            authorizationStartDate = schemas.StrSchema
            authorizationEndDate = schemas.StrSchema
            __annotations__ = {
                "institutionLoginId": institutionLoginId,
                "authorizationStartDate": authorizationStartDate,
                "authorizationEndDate": authorizationEndDate,
            }
    
    institutionLoginId: MetaOapg.properties.institutionLoginId
    authorizationEndDate: MetaOapg.properties.authorizationEndDate
    authorizationStartDate: MetaOapg.properties.authorizationStartDate
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["institutionLoginId"]) -> MetaOapg.properties.institutionLoginId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authorizationStartDate"]) -> MetaOapg.properties.authorizationStartDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authorizationEndDate"]) -> MetaOapg.properties.authorizationEndDate: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["institutionLoginId", "authorizationStartDate", "authorizationEndDate", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["institutionLoginId"]) -> MetaOapg.properties.institutionLoginId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authorizationStartDate"]) -> MetaOapg.properties.authorizationStartDate: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authorizationEndDate"]) -> MetaOapg.properties.authorizationEndDate: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["institutionLoginId", "authorizationStartDate", "authorizationEndDate", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        institutionLoginId: typing.Union[MetaOapg.properties.institutionLoginId, decimal.Decimal, int, ],
        authorizationEndDate: typing.Union[MetaOapg.properties.authorizationEndDate, str, ],
        authorizationStartDate: typing.Union[MetaOapg.properties.authorizationStartDate, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CustomerAuthorizationDetails':
        return super().__new__(
            cls,
            *args,
            institutionLoginId=institutionLoginId,
            authorizationEndDate=authorizationEndDate,
            authorizationStartDate=authorizationStartDate,
            _configuration=_configuration,
            **kwargs,
        )
