# coding: utf-8

"""
    Open Banking

    OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.

    The version of the OpenAPI document: 1.16.0
    Contact: apisupport@mastercard.com
    Created by: https://developer.mastercard.com/open-banking-us/documentation/support/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from mastercard_python_sdk import schemas  # noqa: F401


class Institution(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    A financial institution
    """


    class MetaOapg:
        required = {
            "stateAgg",
            "transAgg",
            "voi",
            "availBalance",
            "ach",
            "oauthEnabled",
            "voa",
            "currency",
            "accountOwner",
            "aha",
            "id",
            "status",
        }
        
        class properties:
            id = schemas.Int64Schema
            transAgg = schemas.BoolSchema
            ach = schemas.BoolSchema
            stateAgg = schemas.BoolSchema
            voi = schemas.BoolSchema
            voa = schemas.BoolSchema
            aha = schemas.BoolSchema
            availBalance = schemas.BoolSchema
            accountOwner = schemas.BoolSchema
            oauthEnabled = schemas.BoolSchema
            currency = schemas.StrSchema
            status = schemas.StrSchema
            name = schemas.StrSchema
            studentLoanData = schemas.BoolSchema
            loanPaymentDetails = schemas.BoolSchema
            accountTypeDescription = schemas.StrSchema
            phone = schemas.StrSchema
            urlHomeApp = schemas.StrSchema
            urlLogonApp = schemas.StrSchema
            urlForgotPassword = schemas.StrSchema
            urlOnlineRegistration = schemas.StrSchema
            _class = schemas.StrSchema
            specialText = schemas.StrSchema
            timeZone = schemas.StrSchema
        
            @staticmethod
            def specialInstructions() -> typing.Type['InstitutionSpecialInstructions']:
                return InstitutionSpecialInstructions
            specialInstutionsTitle = schemas.StrSchema
        
            @staticmethod
            def address() -> typing.Type['InstitutionAddress']:
                return InstitutionAddress
            email = schemas.StrSchema
            newInstitutionId = schemas.Int64Schema
        
            @staticmethod
            def branding() -> typing.Type['Branding']:
                return Branding
            oauthInstitutionId = schemas.Int64Schema
            __annotations__ = {
                "id": id,
                "transAgg": transAgg,
                "ach": ach,
                "stateAgg": stateAgg,
                "voi": voi,
                "voa": voa,
                "aha": aha,
                "availBalance": availBalance,
                "accountOwner": accountOwner,
                "oauthEnabled": oauthEnabled,
                "currency": currency,
                "status": status,
                "name": name,
                "studentLoanData": studentLoanData,
                "loanPaymentDetails": loanPaymentDetails,
                "accountTypeDescription": accountTypeDescription,
                "phone": phone,
                "urlHomeApp": urlHomeApp,
                "urlLogonApp": urlLogonApp,
                "urlForgotPassword": urlForgotPassword,
                "urlOnlineRegistration": urlOnlineRegistration,
                "class": _class,
                "specialText": specialText,
                "timeZone": timeZone,
                "specialInstructions": specialInstructions,
                "specialInstutionsTitle": specialInstutionsTitle,
                "address": address,
                "email": email,
                "newInstitutionId": newInstitutionId,
                "branding": branding,
                "oauthInstitutionId": oauthInstitutionId,
            }
    
    stateAgg: MetaOapg.properties.stateAgg
    transAgg: MetaOapg.properties.transAgg
    voi: MetaOapg.properties.voi
    availBalance: MetaOapg.properties.availBalance
    ach: MetaOapg.properties.ach
    oauthEnabled: MetaOapg.properties.oauthEnabled
    voa: MetaOapg.properties.voa
    currency: MetaOapg.properties.currency
    accountOwner: MetaOapg.properties.accountOwner
    aha: MetaOapg.properties.aha
    id: MetaOapg.properties.id
    status: MetaOapg.properties.status
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["transAgg"]) -> MetaOapg.properties.transAgg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ach"]) -> MetaOapg.properties.ach: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stateAgg"]) -> MetaOapg.properties.stateAgg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["voi"]) -> MetaOapg.properties.voi: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["voa"]) -> MetaOapg.properties.voa: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["aha"]) -> MetaOapg.properties.aha: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["availBalance"]) -> MetaOapg.properties.availBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accountOwner"]) -> MetaOapg.properties.accountOwner: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["oauthEnabled"]) -> MetaOapg.properties.oauthEnabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["currency"]) -> MetaOapg.properties.currency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["studentLoanData"]) -> MetaOapg.properties.studentLoanData: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loanPaymentDetails"]) -> MetaOapg.properties.loanPaymentDetails: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accountTypeDescription"]) -> MetaOapg.properties.accountTypeDescription: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["urlHomeApp"]) -> MetaOapg.properties.urlHomeApp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["urlLogonApp"]) -> MetaOapg.properties.urlLogonApp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["urlForgotPassword"]) -> MetaOapg.properties.urlForgotPassword: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["urlOnlineRegistration"]) -> MetaOapg.properties.urlOnlineRegistration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["class"]) -> MetaOapg.properties._class: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["specialText"]) -> MetaOapg.properties.specialText: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timeZone"]) -> MetaOapg.properties.timeZone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["specialInstructions"]) -> 'InstitutionSpecialInstructions': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["specialInstutionsTitle"]) -> MetaOapg.properties.specialInstutionsTitle: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["address"]) -> 'InstitutionAddress': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["newInstitutionId"]) -> MetaOapg.properties.newInstitutionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["branding"]) -> 'Branding': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["oauthInstitutionId"]) -> MetaOapg.properties.oauthInstitutionId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "transAgg", "ach", "stateAgg", "voi", "voa", "aha", "availBalance", "accountOwner", "oauthEnabled", "currency", "status", "name", "studentLoanData", "loanPaymentDetails", "accountTypeDescription", "phone", "urlHomeApp", "urlLogonApp", "urlForgotPassword", "urlOnlineRegistration", "class", "specialText", "timeZone", "specialInstructions", "specialInstutionsTitle", "address", "email", "newInstitutionId", "branding", "oauthInstitutionId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["transAgg"]) -> MetaOapg.properties.transAgg: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ach"]) -> MetaOapg.properties.ach: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stateAgg"]) -> MetaOapg.properties.stateAgg: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["voi"]) -> MetaOapg.properties.voi: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["voa"]) -> MetaOapg.properties.voa: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["aha"]) -> MetaOapg.properties.aha: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["availBalance"]) -> MetaOapg.properties.availBalance: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accountOwner"]) -> MetaOapg.properties.accountOwner: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["oauthEnabled"]) -> MetaOapg.properties.oauthEnabled: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["currency"]) -> MetaOapg.properties.currency: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["studentLoanData"]) -> typing.Union[MetaOapg.properties.studentLoanData, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loanPaymentDetails"]) -> typing.Union[MetaOapg.properties.loanPaymentDetails, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accountTypeDescription"]) -> typing.Union[MetaOapg.properties.accountTypeDescription, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> typing.Union[MetaOapg.properties.phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["urlHomeApp"]) -> typing.Union[MetaOapg.properties.urlHomeApp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["urlLogonApp"]) -> typing.Union[MetaOapg.properties.urlLogonApp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["urlForgotPassword"]) -> typing.Union[MetaOapg.properties.urlForgotPassword, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["urlOnlineRegistration"]) -> typing.Union[MetaOapg.properties.urlOnlineRegistration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["class"]) -> typing.Union[MetaOapg.properties._class, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["specialText"]) -> typing.Union[MetaOapg.properties.specialText, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timeZone"]) -> typing.Union[MetaOapg.properties.timeZone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["specialInstructions"]) -> typing.Union['InstitutionSpecialInstructions', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["specialInstutionsTitle"]) -> typing.Union[MetaOapg.properties.specialInstutionsTitle, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["address"]) -> typing.Union['InstitutionAddress', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["newInstitutionId"]) -> typing.Union[MetaOapg.properties.newInstitutionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["branding"]) -> typing.Union['Branding', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["oauthInstitutionId"]) -> typing.Union[MetaOapg.properties.oauthInstitutionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "transAgg", "ach", "stateAgg", "voi", "voa", "aha", "availBalance", "accountOwner", "oauthEnabled", "currency", "status", "name", "studentLoanData", "loanPaymentDetails", "accountTypeDescription", "phone", "urlHomeApp", "urlLogonApp", "urlForgotPassword", "urlOnlineRegistration", "class", "specialText", "timeZone", "specialInstructions", "specialInstutionsTitle", "address", "email", "newInstitutionId", "branding", "oauthInstitutionId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        stateAgg: typing.Union[MetaOapg.properties.stateAgg, bool, ],
        transAgg: typing.Union[MetaOapg.properties.transAgg, bool, ],
        voi: typing.Union[MetaOapg.properties.voi, bool, ],
        availBalance: typing.Union[MetaOapg.properties.availBalance, bool, ],
        ach: typing.Union[MetaOapg.properties.ach, bool, ],
        oauthEnabled: typing.Union[MetaOapg.properties.oauthEnabled, bool, ],
        voa: typing.Union[MetaOapg.properties.voa, bool, ],
        currency: typing.Union[MetaOapg.properties.currency, str, ],
        accountOwner: typing.Union[MetaOapg.properties.accountOwner, bool, ],
        aha: typing.Union[MetaOapg.properties.aha, bool, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, ],
        status: typing.Union[MetaOapg.properties.status, str, ],
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        studentLoanData: typing.Union[MetaOapg.properties.studentLoanData, bool, schemas.Unset] = schemas.unset,
        loanPaymentDetails: typing.Union[MetaOapg.properties.loanPaymentDetails, bool, schemas.Unset] = schemas.unset,
        accountTypeDescription: typing.Union[MetaOapg.properties.accountTypeDescription, str, schemas.Unset] = schemas.unset,
        phone: typing.Union[MetaOapg.properties.phone, str, schemas.Unset] = schemas.unset,
        urlHomeApp: typing.Union[MetaOapg.properties.urlHomeApp, str, schemas.Unset] = schemas.unset,
        urlLogonApp: typing.Union[MetaOapg.properties.urlLogonApp, str, schemas.Unset] = schemas.unset,
        urlForgotPassword: typing.Union[MetaOapg.properties.urlForgotPassword, str, schemas.Unset] = schemas.unset,
        urlOnlineRegistration: typing.Union[MetaOapg.properties.urlOnlineRegistration, str, schemas.Unset] = schemas.unset,
        specialText: typing.Union[MetaOapg.properties.specialText, str, schemas.Unset] = schemas.unset,
        timeZone: typing.Union[MetaOapg.properties.timeZone, str, schemas.Unset] = schemas.unset,
        specialInstructions: typing.Union['InstitutionSpecialInstructions', schemas.Unset] = schemas.unset,
        specialInstutionsTitle: typing.Union[MetaOapg.properties.specialInstutionsTitle, str, schemas.Unset] = schemas.unset,
        address: typing.Union['InstitutionAddress', schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        newInstitutionId: typing.Union[MetaOapg.properties.newInstitutionId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        branding: typing.Union['Branding', schemas.Unset] = schemas.unset,
        oauthInstitutionId: typing.Union[MetaOapg.properties.oauthInstitutionId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Institution':
        return super().__new__(
            cls,
            *args,
            stateAgg=stateAgg,
            transAgg=transAgg,
            voi=voi,
            availBalance=availBalance,
            ach=ach,
            oauthEnabled=oauthEnabled,
            voa=voa,
            currency=currency,
            accountOwner=accountOwner,
            aha=aha,
            id=id,
            status=status,
            name=name,
            studentLoanData=studentLoanData,
            loanPaymentDetails=loanPaymentDetails,
            accountTypeDescription=accountTypeDescription,
            phone=phone,
            urlHomeApp=urlHomeApp,
            urlLogonApp=urlLogonApp,
            urlForgotPassword=urlForgotPassword,
            urlOnlineRegistration=urlOnlineRegistration,
            specialText=specialText,
            timeZone=timeZone,
            specialInstructions=specialInstructions,
            specialInstutionsTitle=specialInstutionsTitle,
            address=address,
            email=email,
            newInstitutionId=newInstitutionId,
            branding=branding,
            oauthInstitutionId=oauthInstitutionId,
            _configuration=_configuration,
            **kwargs,
        )

from mastercard_python_sdk.model.branding import Branding
from mastercard_python_sdk.model.institution_address import InstitutionAddress
from mastercard_python_sdk.model.institution_special_instructions import InstitutionSpecialInstructions
